- @main_class = 'corkboard'

.notifications
  - if current_user.has_invitations?
    %p 
      Hey you, guess what?! You've got an invitation to move in to another roomie's house! Go ahead and click
      = link_to 'here', '/accept_invitation'
      to accept the invitation and start living together easier, or click
      = link_to 'here', '/reject_invitations'
      to reject it. Have a fantastic day.
    - unless current_user.house.nil?
      %p NOTICE: Clicking the link above will remove you from the house you currently belong to and let you join the new one.
  - if signed_in? && current_user == @user && !@user.name?
    %p 
      Hi there! If you'd like to change your password or possibly tell us your name, go ahead and click here &rarr; 
      = link_to 'edit profile.', edit_user_path(@user), :class => 'ajax' if current_user
#specials.content
  .list
    %h2 bounties
    %ul
      - @bounties.each  do |bounty|
        %li.bounty 
          %ul
            %li.check
            %li.purpose= link_to bounty.purpose, assignment_url(bounty)
            %li.edit
  .list
    %h2 freebies
    %ul
      - @freebies.each do |freebie|
        %li.freebie 
          %ul
            %li.check
              %li.purpose= link_to freebie.purpose, assignment_url(freebie)
            %li.edit
  .list
    %h2 wishes
    %ul
      - @wishes.each do |wish|
        %li.gift 
          %ul
            %li.check
            %li.purpose= link_to wish.purpose, assignment_url(wish)
            %li.edit
  .list.last
    %h2 gifts
    %ul
      - @gifts.each do |gift|
        %li.gift 
          %ul
            %li.check
            %li.purpose= link_to gift.purpose, assignment_url(gift)
            %li.edit

#upcoming_filters
  %ul#assignee_filters
    %li.left.active my assignments
    %li.right everyone's assignments
  %ul#assignment_filters
    %li.left.active all
    %li#task_filter tasks
    %li.right#expense_filter expenses

#upcoming.content
  .list
    %h2 today
    %ul
      - @things.each do |thing|
        %li{ :class => thing._type.downcase } 
          %ul
            %li{ :title => thing._type.downcase }
            %li= link_to thing.purpose, assignment_url(thing)
            %li.edit
  .list
    %h2 tomorrow
    %ul
 
  .list.last
    %h2= (Date::DAYNAMES[Date.tomorrow.next_day.wday.to_i]).downcase
    %ul

.header_bar
  %h1 these coming days
#centric.content  
  - # what weekday number is today? (Sun = 0, Mon = 1)?
  - weekday_number = Date.today.wday()
  - # how many days do we show after today
  - number_of_days = 13
  - (0..number_of_days).map do |i|
    - date = Date.today + i.days
    - current_day = (date == Date.today) ? 'current_day' : nil
    .day{:class => current_day}
      %p.day_name= Date::ABBR_DAYNAMES[date.wday()]
      %p.day_number= date.day
      #todo
        =link_to '1', '#', :class => "tasks"
        =link_to '2', '#', :class => "expenses tooltip", :title => "Yaaaaaaoooo"

.header_bar
  %h1 this month
#calendar.content  
  - # what weekday number is today? (Sun = 0, Mon = 1)?
  - weekday_number = Date.today.wday()
  - # how many days do we show
  - days = 34
  - # how many days are we showing after today?
  - number_of_days = (weekday_number == 0) ? days : days - weekday_number
  - # if the number of days after today are not
  - # equal to the total number of days shown
  - if number_of_days != days
    - (0..weekday_number).map do |i|
      - date = Date.today - weekday_number + i.days 
      - unless date == Date.today
        .day.past
          %p.day_name= Date::ABBR_DAYNAMES[date.wday()]
          %p.day_number= date.day
          #todo
            =link_to '0', '#', :class => "tasks"
            =link_to '0', '#', :class => "expenses"
  - (0..number_of_days).map do |i|
    - date = Date.today + i.days
    - current_day = (date == Date.today) ? 'current_day' : nil
    .day{:class => current_day}
      %p.day_name= Date::ABBR_DAYNAMES[date.wday()]
      %p.day_number= date.day
      #todo
        =link_to '1', '#', :class => "tasks"
        =link_to '2', '#', :class => "expenses"
#modal
#darknessification
